name: Release

on:
  push:
    branches:
      - main

permissions:
  contents: read

jobs:
  release:
    runs-on: ubuntu-latest
    outputs:
      released: ${{ steps.release.outputs.released }}
      tag: ${{ steps.release.outputs.tag }}
    concurrency:
      group: ${{ github.workflow }}-release-${{ github.ref_name }}
      cancel-in-progress: false
    permissions:
      id-token: write
      contents: write
    steps:
      - uses: actions/checkout@v4.2.2
        with:
          fetch-depth: 0
          token: ${{ secrets.GITHUB_TOKEN }}

      - name: Python Semantic Release
        id: release
        uses: python-semantic-release/python-semantic-release@v10.2.0
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}

      - name: Upload | Distribution Artifacts
        if: steps.release.outputs.released == 'true'
        run: |
          python -m pip install --upgrade build
          python -m build
        # Make sure dist/ exists and upload artifacts
      - name: Upload | Artifacts
        if: steps.release.outputs.released == 'true'
        uses: actions/upload-artifact@v4
        with:
          name: distribution-artifacts
          path: dist
          if-no-files-found: error

  deploy:
    runs-on: ubuntu-latest
    needs: release
    if: ${{ needs.release.outputs.released == 'true' }}
    permissions:
      contents: read
      id-token: write
    steps:
      - name: Checkout repo
        uses: actions/checkout@v4.2.2

      - name: Download | Artifacts
        uses: actions/download-artifact@v4
        with:
          name: distribution-artifacts
          path: dist

      - name: Publish to PyPI
        uses: pypa/gh-action-pypi-publish@v1.12.4
        with:
          packages-dir: dist
          print-hash: true
          verbose: true

      - name: Check PKGBUILD
        run: ls -lah ./PKGBUILD

      - name: Update PKGBUILD version
        run: |
          sed -i "s#/^pkgver=.*#/pkgver=${{ needs.release.outputs.tag }}#" PKGBUILD
          # sed -i "s/^pkgrel=.*/pkgrel=1/" PKGBUILD

      - name: Publish AUR Package
        uses: KSXGitHub/github-actions-deploy-aur@v4.1.1
        with:
          pkgname: animepahe-dl
          pkgbuild: ./PKGBUILD
          commit_username: ${{ secrets.AUR_USERNAME }}
          commit_email: ${{ secrets.AUR_EMAIL }}
          ssh_private_key: ${{ secrets.AUR_SSH_PRIVATE_KEY }}
          commit_message: Update AUR package
          ssh_keyscan_types: rsa,ecdsa,ed25519
